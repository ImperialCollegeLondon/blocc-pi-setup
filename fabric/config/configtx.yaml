Organizations:
- &OrdererOrg

  Name: OrdererMSP
  ID: OrdererMSP
  MSPDir: ../organizations/ordererOrganizations/blocc.doc.ic.ac.uk/msp
  Policies:
    Readers:
      Type: Signature
      Rule: "OR('OrdererMSP.member')"
    Writers:
      Type: Signature
      Rule: "OR('OrdererMSP.member')"
    Admins:
      Type: Signature
      Rule: "OR('OrdererMSP.admin')"
  OrdererEndpoints:
  - blocc-orderer0:7050

- &Container1
  Name: Container1MSP
  ID: Container1MSP
  MSPDir: ../organizations/peerOrganizations/container1.blocc.doc.ic.ac.uk/msp
  Policies:
    Readers:
      Type: Signature
      Rule: "OR('Container1MSP.admin', 'Container1MSP.peer', 'Container1MSP.client')"
    Writers:
      Type: Signature
      Rule: "OR('Container1MSP.admin', 'Container1MSP.client')"
    Admins:
      Type: Signature
      # Adding peer to Admins since each peerOrg is a shipping container
      Rule: "OR('Container1MSP.admin', 'Container1MSP.peer')"
    Endorsement:
      Type: Signature
      Rule: "OR('Container1MSP.peer')"
  
- &Container2
  Name: Container2MSP
  ID: Container2MSP
  MSPDir: ../organizations/peerOrganizations/container2.blocc.doc.ic.ac.uk/msp
  Policies:
    Readers:
      Type: Signature
      Rule: "OR('Container2MSP.admin', 'Container2MSP.peer', 'Container2MSP.client')"
    Writers:
      Type: Signature
      Rule: "OR('Container2MSP.admin', 'Container2MSP.client')"
    Admins:
      Type: Signature
      Rule: "OR('Container2MSP.admin', 'Container2MSP.peer')"
    Endorsement:
      Type: Signature
      Rule: "OR('Container2MSP.peer')"

Capabilities:
  Channel: &ChannelCapabilities
    V2_0: true

  Orderer: &OrdererCapabilities
    V2_0: true

  Application: &ApplicationCapabilities
    V2_5: true

Application: &ApplicationDefaults

  Organizations:

  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    LifecycleEndorsement:
      Type: ImplicitMeta
      Rule: "MAJORITY Endorsement"
    Endorsement:
      Type: ImplicitMeta
      Rule: "MAJORITY Endorsement"

  Capabilities:
    !!merge <<: *ApplicationCapabilities

Orderer: &OrdererDefaults

  OrdererType: etcdraft

  EtcdRaft:
    Consenters:
    - Host: blocc-orderer0
      Port: 7050
      # NOTE: For simplicity, each orderer in this example is using the same TLS certificate for both the server and client, although this is not required.
      ClientTLSCert: ../organizations/ordererOrganizations/blocc.doc.ic.ac.uk/orderers/orderer.blocc.doc.ic.ac.uk/tls/server.crt
      ServerTLSCert: ../organizations/ordererOrganizations/blocc.doc.ic.ac.uk/orderers/orderer.blocc.doc.ic.ac.uk/tls/server.crt

  BatchTimeout: 2s

  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 99 MB
    PreferredMaxBytes: 512 KB
  Organizations:
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"


Channel: &ChannelDefaults
  Policies:
    # Who may invoke the 'Deliver' API
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    # Who may invoke the 'Broadcast' API
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    # By default, who may modify elements at this config level
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"

  Capabilities:
    !!merge <<: *ChannelCapabilities

Profiles:

  BloccApplicationGenesis:
    <<: *ChannelDefaults
    Orderer:
      <<: *OrdererDefaults
      Organizations:
      - *OrdererOrg
      Capabilities: *OrdererCapabilities
    Application:
      <<: *ApplicationDefaults
      Organizations:
      - *Container1
      - *Container2
      Capabilities: *ApplicationCapabilities
